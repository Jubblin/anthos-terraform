output "test_topology" {
  description = "The topology file for crud test"
  value = templatefile("${path.module}/test_topology.tpl", {
    tenant                    = module.aad-app.tenant_id
    region                    = "${var.region}"
    vnet_id                   = module.cluster-vnet.vnet_id
    control_subnet_id         = module.cluster-vnet.subnet_id
    nodepool_subnet_id        = module.cluster-vnet.subnet_id
    pod_subnet_id             = module.cluster-vnet.pod_subnet.id
    subscription              = module.aad-app.subscription_id
    application_id            = module.aad-app.aad_app_id
    application_obj_id        = module.aad-app.aad_app_obj_id
    resource_group_id         = module.cluster-rg.resource_group_id
    ssh_public_key            = var.ssh_pub_key
    bastion_address           = module.bastion.bastion_ip
    ssh_private_key           = var.ssh_private_key_path
    bastion_subnet_id         = module.cluster-vnet.subnet_id
    proxy_resource_group_id   = var.create_proxy ? module.cluster-vnet.resource_group_id : ""
    proxy_secret_id           = var.create_proxy ? module.proxy[0].secret_id : ""
  })
}

output "create_client" {
  description = "The create client request"
  value = templatefile("${path.module}/create_client.tpl", {
    tenant         = module.aad-app.tenant_id
    application_id = module.aad-app.aad_app_id
    owner          = "${var.owner}"
  })
}

output "create_cluster" {
  description = "The create cluster request"
  value = templatefile("${path.module}/create_cluster.tpl", {
    region                  = "${var.region}"
    resource_group_id       = module.cluster-rg.resource_group_id
    vnet_id                 = module.cluster-vnet.vnet_id
    subnet_id               = module.cluster-vnet.subnet_id
    authorized_key          = var.ssh_pub_key
    subscription            = module.aad-app.subscription_id
    application_id          = module.aad-app.aad_app_id
    proxy_resource_group_id = var.create_proxy ? module.cluster-vnet.resource_group_id : ""
    proxy_secret_id         = var.create_proxy ? module.proxy[0].secret_id : ""
    owner                   = "${var.owner}"
    date                    = timestamp()
    fleet_project           = "${var.fleet_project}"
  })
}

output "create_vpc_native_cluster" {
  description = "The create VPC-native cluster request"
  value = templatefile("${path.module}/create_vpc_native_cluster.tpl", {
    region                  = "${var.region}"
    resource_group_id       = module.cluster-rg.resource_group_id
    vnet_id                 = module.cluster-vnet.vnet_id
    subnet_id               = module.cluster-vnet.subnet_id
    pod_subnet_id           = module.cluster-vnet.pod_subnet.id
    authorized_key          = var.ssh_pub_key
    subscription            = module.aad-app.subscription_id
    application_id          = module.aad-app.aad_app_id
    proxy_resource_group_id = var.create_proxy ? module.cluster-vnet.resource_group_id : ""
    proxy_secret_id         = var.create_proxy ? module.proxy[0].secret_id : ""
    owner                   = "${var.owner}"
    date                    = timestamp()
  })
}

output "update_cluster" {
  description = "The update cluster request"
  value = templatefile("${path.module}/update_cluster.tpl", {
    region            = "${var.region}"
    resource_group_id = module.cluster-rg.resource_group_id
    vnet_id           = module.cluster-vnet.vnet_id
    subnet_id         = module.cluster-vnet.subnet_id
    authorized_key    = var.ssh_pub_key
    subscription      = module.aad-app.subscription_id
    application_id    = module.aad-app.aad_app_id
    owner             = "${var.owner}"
    date              = timestamp()
  })
}

output "create_nodepool" {
  description = "The create nodepool request"
  value = templatefile("${path.module}/create_nodepool.tpl", {
    subnet_id               = module.cluster-vnet.subnet_id
    authorized_key          = var.ssh_pub_key
    proxy_resource_group_id = var.create_proxy ? module.cluster-vnet.resource_group_id : ""
    proxy_secret_id         = var.create_proxy ? module.proxy[0].secret_id : ""
    owner                   = "${var.owner}"
    date                    = timestamp()
  })
}

output "create_windows_nodepool" {
  description = "The create Windows nodepool request"
  value = templatefile("${path.module}/create_windows_nodepool.tpl", {
    subnet_id               = module.cluster-vnet.subnet_id
    authorized_key          = var.ssh_pub_key
    proxy_resource_group_id = var.create_proxy ? module.cluster-vnet.resource_group_id : ""
    proxy_secret_id         = var.create_proxy ? module.proxy[0].secret_id : ""
    owner                   = "${var.owner}"
    date                    = timestamp()
  })
}

output "bastion_ip" {
  description = "The bastion ip"
  value       = module.bastion.bastion_ip
}

output "byo_resource_group_name" {
  description = "The name of the byo resource group"
  value       = module.cluster-vnet.resource_group_name
}

output "byo_nsg_name" {
  description = "The name of the byo network security group"
  value       = module.bastion.nsg_name
}

output "byo_nsg_ssh_inbound_rule_name" {
  description = "The name of the byo network security group rule for inbound ssh to bastion"
  value       = module.bastion.inbound_ssh_rule_name
}